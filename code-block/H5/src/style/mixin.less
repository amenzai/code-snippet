.setTapColor(@c: rgba(0, 0, 0, 0)) {
  -webkit-tap-highlight-color: @c;
}

// 1px border
.setTopLine(@c: #C7C7C7) {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  height: 1px;
  border-top: 1px solid @c;
  color: @c;
  transform-origin: 0 0;
  transform: scaleY(0.5);
}

.setBottomLine(@c: #C7C7C7) {
  content: " ";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  height: 1px;
  border-bottom: 1px solid @c;
  color: @c;
  transform-origin: 0 100%;
  transform: scaleY(0.5);
}

.setLeftLine(@c: #C7C7C7) {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 1px;
  bottom: 0;
  border-left: 1px solid @c;
  color: @c;
  transform-origin: 0 0;
  transform: scaleX(0.5);
}

.setRightLine(@c: #C7C7C7) {
  content: " ";
  position: absolute;
  right: 0;
  top: 0;
  width: 1px;
  bottom: 0;
  border-right: 1px solid @c;
  color: @c;
  transform-origin: 100% 0;
  transform: scaleX(0.5);
}

.setLine(@c: #C7C7C7) {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  width: 200%;
  height: 1px;
  border: 1px solid @c;
  color: @c;
  height: 200%;
  transform-origin: left top;
  transform: scale(0.5);
}

.bd-1px() {
  position: relative;
  &:before {
      .setLine();
  }
}

.bd-1px-t() {
  position: relative;
  &:before {
      .setTopLine();
  }
}

.bd-1px-b() {
  position: relative;
  &:after {
      .setBottomLine();
  }
}

.bd-1px-tb() {
  position: relative;
  &:before {
      .setTopLine();
  }
  &:after {
      .setBottomLine();
  }
}

.bd-1px-l() {
  position: relative;
  &:before {
      .setLeftLine();
  }
}

.bd-1px-r() {
  position: relative;
  &:after {
      .setRightLine();
  }
}

// 箭头
._setArrow(@arrowsize, @borderColor, @borderWidth){
  display: inline-block;
  height: @arrowsize;
  width: @arrowsize;
  border-width: @borderWidth @borderWidth 0 0;
  border-color: @borderColor;
  border-style: solid;
}

.setArrow(@direction, @arrowsize, @borderColor, @borderWidth) when (@direction = top) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(0.71,-0.71,0.71,0.71,0,0); // rotate(-45deg)
}

.setArrow(@direction, @arrowsize, @borderColor,@borderWidth) when (@direction = right) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(0.71,0.71,-0.71,0.71,0,0); // rotate(45deg);

  position: relative;
  top: -2px;
}

.setArrow(@direction, @arrowsize, @borderColor,@borderWidth) when (@direction = down) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(-0.71,0.71,-0.71,-0.71,0,0); // rotate(135deg);

  position: relative;
  top: -3px;
}

.setArrow(@direction, @arrowsize, @borderColor,@borderWidth) when (@direction = left) {
  ._setArrow(@arrowsize, @borderColor, @borderWidth);
  transform: matrix(-0.71,-0.71,0.71,-0.71,0,0); // rotate(-135deg);

  position: relative;
  top: -2px;
}

// rem
.fz(@px) {
  font-size: unit(@px / 37.5, rem);
}

.w(@px) {
  width: unit(@px / 37.5, rem);
}

.h(@px) {
  height: unit(@px / 37.5, rem);
}

.lh(@px) {
  line-height: unit(@px / 37.5, rem);
}

.mt(@px) {
  margin-top: unit(@px / 37.5, rem);
}

.ml(@px) {
  margin-left: unit(@px / 37.5, rem);
}

.mr(@px) {
  margin-right: unit(@px / 37.5, rem);
}

.mb(@px) {
  margin-bottom: unit(@px / 37.5, rem);
}

.pt(@px) {
  padding-top: unit(@px / 37.5, rem);
}

.pl(@px) {
  padding-left: unit(@px / 37.5, rem);
}

.pr(@px) {
  padding-right: unit(@px / 37.5, rem);
}

.pb(@px) {
  padding-bottom: unit(@px / 37.5, rem);
}

/* 1px解决方案 */

.mix-1px (@top, @right, @bottom, @left, @color) {
  position: relative;
  @scale: 2;
  &:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100% * @scale;
    height: 100% * @scale;
    border: 0 @color solid;
    box-sizing: border-box;
    transform-origin: 0 0;
    transform: scale(1 / @scale);
    pointer-events: none;
    z-index: 0;
    & when (@top > 0) {
      border-top-width: 1px;
    }
    & when (@right > 0) {
      border-right-width: 1px;
    }
    & when (@bottom > 0) {
      border-bottom-width: 1px;
    }
    & when (@left > 0) {
      border-left-width: 1px;
    }
  }
}

/* 清除1px */

.mix-1px-clear () {
  &:before {
    display: none;
  }
}

/*
 * 清除浮动
 */

.mix-clearfix () {
  &:before,
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

/* 垂直居中 */

.mix-flex-y-center () {
  display: flex;
  align-items: center;
}

/* 水平居中 */

.mix-flex-x-center () {
  display: flex;
  justify-content: center;
}

/* 水平垂直居中 */

.mix-flex-center () {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* 超出部分出省略号 */

.text-overflow () {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

/* 多行文本超出部分省略号 */

.text-overflow-line(@line: 2) {
  display: -webkit-box;
  text-overflow: ellipsis;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: @line;
}